{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} - Nouveau questionnaire
{% endblock %}

{% block content %}
<div class="page">
    <div class="table-container-traitements">
        <div class="header headretour">
            <a href="javascript:history.back()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
                    <path fill="currentColor" d="M609.408 149.376L277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0a30.59 30.59 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.59 30.59 0 0 0 0-42.688a29.12 29.12 0 0 0-41.728 0"/>
                </svg>
            </a>
            <h2>Nouveau questionnaire</h2>
        </div>

        {{ form_start(form, { "attr": { "class": "sous-traitantform", "enctype": "multipart/form-data" } }) }}

        <!-- Questionnaire Information -->
        <div class="sectt">
            <h3>Informations</h3>
            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.title) }}
                    {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>

            <!-- File Upload -->
            <div class="form-group mt-3">
                <label>Image du questionnaire</label>
                <button type="button" class="file-button" onclick="document.getElementById('fileInput').click();">
                    <i class="fa fa-file"></i> Joindre une image
                </button>
                {{ form_widget(form.pictureFile, {'attr': {'id': 'fileInput', 'class': 'd-none', 'onchange': 'updateFileName(this)'}}) }}
                <div class="invalid-feedback">{{ form_errors(form.pictureFile) | striptags }}</div>
            </div>
        </div>

        <!-- Selection of Users -->
        <div class="sectt">
            <h3>Disponibilité</h3>
            <div class="custom-control custom-checkbox my-2">
                {{ form_widget(form.availableForAll, {'attr': {'class': 'custom-control-input'}}) }}
                {{ form_label(form.availableForAll, null, {'label_attr': {'class': 'custom-control-label'}}) }}
            </div>

            <p>OU</p>

            <button type="button" onclick="openUsersModal();" class="btn btn-primary">Sélectionner des utilisateurs</button>
            <div id="users-selected">{{ usersStr|join(', ') }}</div>
            {% do form.users.setRendered() %}
        </div>

        <!-- Ajouter un Contenu Section -->
        <div class="sectt">
            <h3>Ajouter un contenu</h3>
            <div class="col-12" id="content_container">
                <!-- Dynamically added questions will appear here -->
            </div>
            <div class="col-12 d-flex">
                <button type="button" class="btn btn-success btn-rounded-circle mr-2 content_add_button" onclick="addQuestion();">
                    <i class="mdi mdi-plus"></i>
                </button>
                <h5 class="pt-2">Ajouter une question</h5>
            </div>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="submit-button">Enregistrer</button>

        {{ form_end(form) }}
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        var questionCount = 1;

        // File Upload Button Update
        function updateFileName(input) {
            const button = document.querySelector('.file-button');
            if (input.files.length > 0) {
                button.innerHTML = `<i class="fa fa-file"></i> ${input.files[0].name}`;
            } else {
                button.innerHTML = `<i class="fa fa-file"></i> Joindre une image`;
            }
        }

        // Function to add new questions dynamically
        function addQuestion() {
            const container = document.getElementById('content_container');

            var questionBlock = document.createElement("div");
            questionBlock.className = "w-100 my-4";

            var questionHeader = document.createElement("h5");
            questionHeader.innerText = "Question " + questionCount;
            questionBlock.appendChild(questionHeader);

            var questionInput = document.createElement("input");
            questionInput.className = "w-100 form-control mb-2";
            questionInput.setAttribute("type", "text");
            questionInput.setAttribute("name", "form[questions][" + questionCount + "][title]");
            questionInput.setAttribute("placeholder", "Intitulé de la question");

            var answerType = document.createElement("select");
            answerType.className = "w-100 form-control mb-2";
            answerType.setAttribute("name", "form[questions][" + questionCount + "][type]");
            answerType.innerHTML = `
                <option value="single">Choix unique</option>
                <option value="multiple">Choix multiple</option>
                <option value="text">Réponse texte</option>
            `;

            var choicesInput = document.createElement("textarea");
            choicesInput.className = "w-100 form-control mb-2";
            choicesInput.setAttribute("name", "form[questions][" + questionCount + "][choices]");
            choicesInput.setAttribute("placeholder", "Ajoutez les choix (1 par ligne)");

            var removeBtn = document.createElement("button");
            removeBtn.className = "btn btn-danger btn-sm";
            removeBtn.innerText = "Supprimer";
            removeBtn.onclick = function () {
                questionBlock.remove();
                questionCount--;
            };

            questionBlock.appendChild(questionInput);
            questionBlock.appendChild(answerType);
            questionBlock.appendChild(choicesInput);
            questionBlock.appendChild(removeBtn);

            container.appendChild(questionBlock);

            questionCount++;
        }
    </script>
{% endblock %}
