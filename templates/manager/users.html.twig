{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} - {{ 'Sociétés'|trans }}
{% endblock %}

{% block content %}
<div class="page">
    <div class="table-container-traitements">
        <div class="header">
            <h2>{{ 'Sociétés'|trans }}</h2>
        </div>

        <!-- Action Buttons -->
        <div style="display: flex; justify-content: space-between; width: 100%; margin-bottom: 20px;">
            <div class="search-bar">
                <span class="search-icon">
                    <i class="fa fa-search" aria-hidden="true"></i>
                </span>
                <input type="text" id="searchInput" placeholder="{{ 'Rechercher'|trans }}" />
            </div>
            <div class="buttons">
                {% if is_granted('ROLE_DPO') %}
                    <a href="{{ path('manager_users_add') }}" class="btn btn-primary">{{ 'Ajouter un nouveau client'|trans }}</a>
                {% endif %}
                {% if is_granted('ROLE_ADMIN') %}
                    <a href="{{ path('manager_subscriptions_export') }}" class="btn btn-primary">{{ 'Exporter les abonnements'|trans }}</a>
                {% endif %}
            </div>
        </div>

        <!-- Data Table -->
        <table class="styled-table" id="datatable">
            <thead>
                <tr>
                    <th>{{ 'Société'|trans }}</th>
                    <th>{{ 'Email'|trans }}</th>
                    <th>{{ 'Téléphone'|trans }}</th>
                    <th>{{ 'Adresse'|trans }}</th>
                    <th>{{ 'Contact'|trans }}</th>
                    <th>{{ 'Délégué'|trans }}</th>
                  
                    <th>{{ 'Crédits'|trans }}</th>
                   
                    <th>{{ 'Actions'|trans }}</th>
                </tr>
            </thead>
            <tbody>
                {% for user in users %}
                    <tr>
                        <td>{{ user.companyName }}</td>
                        <td>{{ user.email }}</td>
                        <td>{{ user.phone }}</td>
                        <td>
                            {{ user.address }}
                            {% if user.address2 %}, {{ user.address2 }}{% endif %}
                            <br/>{{ user.zipCode }}, {{ user.city }}
                        </td>
                        <td>{{ user.contactFirstName }} {{ user.contactLastName }}</td>
                        <td>{% if user.manager %}{{ user.manager.firstName }} {{ user.manager.lastName }}{% endif %}</td>
                     
                        <td>
                            <a href="{{ path('manager_credits_user', {'id': user.id}) }}" class="badge badge-primary">
                                {{ user.credit|format_credit_number }}
                            </a>
                        </td>
                      
                        <td>
                            <div class="options">
                             
                               
                               
                                <a href="{{ path('manager_user_switch', {'id': user.id}) }}" class="btn btn-outline-primary">
                                    <button class="switch"><i class="fa fa-user-plus" aria-hidden="true"></i> {{ 'Se connecter'|trans }}</button>
                                </a>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>

        <!-- Pagination -->
        <div class="pagination-container">
            <div class="results-per-page">
                <label for="resultsSelect">{{ 'Afficher'|trans }}</label>
                <select id="resultsSelect" class="results-select">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                </select>
                <span>{{ 'résultats par page'|trans }}</span>
            </div>
            <div class="pagination-controls">
                <button class="pagination-button" id="prevPage" disabled>&lt;</button>
                <span class="pagination-info" id="paginationInfo">{{ 'Page 1 sur 1'|trans }}</span>
                <button class="pagination-button" id="nextPage" disabled>&gt;</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const rows = Array.from(document.querySelectorAll('#datatable tbody tr'));
        const resultsSelect = document.getElementById('resultsSelect');
        const paginationInfo = document.getElementById('paginationInfo');
        const prevPage = document.getElementById('prevPage');
        const nextPage = document.getElementById('nextPage');
        const searchInput = document.getElementById('searchInput');

        let currentPage = 1;
        let resultsPerPage = parseInt(resultsSelect.value);
        let filteredRows = rows;

        function updateTable() {
            const totalPages = Math.ceil(filteredRows.length / resultsPerPage);
            const start = (currentPage - 1) * resultsPerPage;
            const end = start + resultsPerPage;

            rows.forEach((row, index) => {
                row.style.display = filteredRows.includes(row) && index >= start && index < end ? '' : 'none';
            });

            paginationInfo.textContent = `{{ 'Page'|trans }} ${currentPage} {{ 'sur'|trans }} ${totalPages}`;
            prevPage.disabled = currentPage === 1;
            nextPage.disabled = currentPage === totalPages;
        }

        function filterTable() {
            const query = searchInput.value.toLowerCase();
            filteredRows = rows.filter(row => row.innerText.toLowerCase().includes(query));
            currentPage = 1;
            updateTable();
        }

        resultsSelect.addEventListener('change', function () {
            resultsPerPage = parseInt(this.value);
            currentPage = 1;
            updateTable();
        });

        prevPage.addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                updateTable();
            }
        });

        nextPage.addEventListener('click', function () {
            const totalPages = Math.ceil(filteredRows.length / resultsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                updateTable();
            }
        });

        searchInput.addEventListener('input', filterTable);

        updateTable();
    });
</script>
{% endblock %}
