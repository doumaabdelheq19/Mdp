{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} - Questionnaires
{% endblock %}

{% block content %}
<div class="page">
    <div class="table-container-traitements">
        <div class="header">
            <h2>Gestion des Questionnaires</h2>
        </div>

        <!-- Search & Action Buttons -->
        <div style="display: flex; justify-content: space-between; width: 100%; margin-bottom: 20px;">
            <div class="search-bar">
                <span class="search-icon">
                    <i class="fa fa-search"></i>
                </span>
                <input type="text" id="searchInput" placeholder="Rechercher un questionnaire..." />
            </div>
            <div class="buttons">
                <div class="exporter">
                    <a href="{{ path('manager_trainings_add') }}" class="btn btn-primary">Créer un questionnaire</a>
                </div>
            </div>
        </div>

        <!-- Questionnaire Table -->
        <table class="styled-table" id="datatable">
            <thead>
                <tr>
                    <th>Titre</th>
                    <th>Nombre de questions</th>
                    <th>Réponses définies</th>
                    <th>Actif</th>
                    <th class="actionss">Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for training in trainings %}
                    <tr>
                        <td>{{ training.title }}</td>
                        <td>{{ training.questions|length }}</td>
                        <td style="width:60px">
                            {% if training.answered %}
                                <span class="badge badge-success">OUI</span>
                            {% else %}
                                <span class="badge badge-danger">NON</span>
                            {% endif %}
                        </td>
                        <td style="width:60px">
                            {% if training.active %}
                                <span class="badge badge-success">OUI</span>
                            {% else %}
                                <span class="badge badge-danger">NON</span>
                            {% endif %}
                        </td>
                        <td>
                            <div class="options">
                                <a href="{{ path('manager_trainings_edit', {'id': training.id}) }}" class="btn btn-secondary">
                                    <button class="edit"><i class="fa fa-pencil-square-o"></i></button>
                                </a>
                                <a style="width:100%" href="{{ path('manager_trainings_answer', {'id': training.id}) }}" class="btn btn-primary">
                                    <button class="editer2">Définir les réponses</button>
                                </a>
                                <button type="button" class="edit" onclick="showStats({{ training.id }})">
                                    Voir les statistiques
                                </button>
                                <a href="{{ path('manager_trainings_delete', {'id': training.id}) }}" class="btn btn-danger" onclick="return confirm('Confirmer la suppression de ce questionnaire ?');">
                                    <button class="delete">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </a>
                                <a href="{{ path('manager_trainings_translate', {'id': training.id, '_locale': 'en'}) }}" class="btn btn-primary">
                                       <button class="edit">EN</button>
                                </a>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>

        <!-- Pagination -->
        <div class="pagination-container">
            <div class="results-per-page">
                <label for="resultsSelect">Afficher</label>
                <select id="resultsSelect" class="results-select">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                </select>
                <span>résultats par page</span>
            </div>

            <div class="pagination-controls">
                <button class="pagination-button" id="prevPage" disabled>&lt;</button>
                <span class="pagination-info" id="paginationInfo">Page 1 sur 1</span>
                <button class="pagination-button" id="nextPage" disabled>&gt;</button>
            </div>
        </div>
    </div>
</div>

<!-- Questionnaire Stats Modal -->
<div class="modal fade" id="modal_content" tabindex="-1" role="dialog" aria-labelledby="modal_content" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Réponses au questionnaire</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fermer">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modal_content_body"></div>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
document.addEventListener('DOMContentLoaded', function () {
    const rows = Array.from(document.querySelectorAll('#datatable tbody tr'));
    const resultsSelect = document.getElementById('resultsSelect');
    const paginationInfo = document.getElementById('paginationInfo');
    const prevPage = document.getElementById('prevPage');
    const nextPage = document.getElementById('nextPage');
    const searchInput = document.getElementById('searchInput');

    let currentPage = 1;
    let resultsPerPage = parseInt(resultsSelect.value);
    let filteredRows = [...rows]; // Create a copy of rows for filtering

    function updateTable() {
        const totalPages = Math.ceil(filteredRows.length / resultsPerPage) || 1;
        currentPage = Math.min(currentPage, totalPages); // Ensure current page is within bounds

        const start = (currentPage - 1) * resultsPerPage;
        const end = start + resultsPerPage;

        // Hide all rows first
        rows.forEach(row => row.style.display = 'none');

        // Show only the rows for the current page
        filteredRows.slice(start, end).forEach(row => row.style.display = '');

        paginationInfo.textContent = `Page ${currentPage} sur ${totalPages}`;
        prevPage.disabled = currentPage === 1;
        nextPage.disabled = currentPage >= totalPages;
    }

    function filterTable() {
        const query = searchInput.value.toLowerCase();
        filteredRows = rows.filter(row => row.innerText.toLowerCase().includes(query));
        currentPage = 1; // Reset pagination to first page when searching

        updateTable();
    }

    resultsSelect.addEventListener('change', function () {
        resultsPerPage = parseInt(this.value);
        currentPage = 1;
        updateTable();
    });

    prevPage.addEventListener('click', function () {
        if (currentPage > 1) {
            currentPage--;
            updateTable();
        }
    });

    nextPage.addEventListener('click', function () {
        const totalPages = Math.ceil(filteredRows.length / resultsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            updateTable();
        }
    });

    searchInput.addEventListener('input', filterTable);

    updateTable();
});


        function showStats(trainingId) {
            $.ajax({
                type: "POST",
                async: true,
                url: "{{ path('manager_trainings_requests_stats') }}",
                data: { training: trainingId },
                success: function (content) {
                    if (content.success) {
                        document.getElementById("modal_content_body").innerHTML = content.html;
                        $('#modal_content').modal('show');
                        function roundDisplayedStats() {
    document.querySelectorAll("#modal_content_body .badge-info").forEach(stat => {
        let value = parseFloat(stat.textContent.trim()); // Get number from text
        if (!isNaN(value)) {
            stat.textContent = Math.round(value) + "%"; // Round to whole number
        }
    });
}

// Run after content is inserted into modal
$(document).on('shown.bs.modal', '#modal_content', function () {
    roundDisplayedStats();
});

                    }
                }
            });
        }
    </script>
{% endblock %}
