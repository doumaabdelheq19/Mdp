{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} - Nouveau Client
{% endblock %}

{% block content %}
<div class="page">
    <div class="table-container-traitements">
        <div class="header-con">
            <div class="header">
                <h2><img src="./imgs/iconamoon_arrow-up-2-light.svg" alt=""> Nouveau Client</h2>
            </div>
        </div>

        {{ form_start(form, {'attr': {'class': 'sous-traitantform'}}) }}

        <!-- Avatar Upload -->
        <div class="form-row justify-content-center avatar-upload-container">
            <label class="avatar-input-label">
                <div class="avatar-container">
                    <span class="avatar avatar-xxl">
                        <span class="avatar-title rounded-circle bg-dark">
                            <i class="mdi mdi-account-box-outline"></i>
                        </span>
                        <span class="avatar-upload-icon">
                            <i class="mdi mdi-upload mdi-24px"></i>
                        </span>
                    </span>
                    {{ form_widget(form.pictureFile, {'attr': {'class': 'avatar-file-picker'} }) }}
                </div>
            </label>
            <div class="form-feedback">
                {{ form_errors(form.pictureFile) | striptags }}
            </div>
        </div>

        <!-- Société Section -->
        <div class="sectt no_boder">
            <h3>Société</h3>
            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.companyName) }}
                    {{ form_widget(form.companyName, {'attr': {'placeholder': 'Nom de l\'entreprise'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.siret) }}
                    {{ form_widget(form.siret, {'attr': {'placeholder': 'SIRET'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.address) }}
                    {{ form_widget(form.address, {'attr': {'placeholder': 'Adresse'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.address2) }}
                    {{ form_widget(form.address2, {'attr': {'placeholder': 'Complément'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.zipCode) }}
                    {{ form_widget(form.zipCode, {'attr': {'placeholder': 'Code postal'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.city) }}
                    {{ form_widget(form.city, {'attr': {'placeholder': 'Ville'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.companyPhone) }}
                    {{ form_widget(form.companyPhone, {'attr': {'placeholder': 'Téléphone'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.employeesNumber) }}
                    {{ form_widget(form.employeesNumber, {'attr': {'placeholder': 'Nombre d\'employés', 'style': 'width:96%'}}) }}
                </div>
            </div>
        </div>

        <!-- Utilisateur Section -->
        <div class="sectt">
            <h3>Utilisateur</h3>
            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.phone) }}
                    {{ form_widget(form.phone, {'attr': {'placeholder': 'Téléphone'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.email) }}
                    {{ form_widget(form.email, {'attr': {'placeholder': 'Email'}}) }}
                </div>
            </div>
        </div>

        <!-- Relai Principal -->
        <div class="sectt">
            <h3>Relai Principal</h3>
            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.contactLastName) }}
                    {{ form_widget(form.contactLastName, {'attr': {'placeholder': 'Nom'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.contactFirstName) }}
                    {{ form_widget(form.contactFirstName, {'attr': {'placeholder': 'Prénom'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.contactEmail) }}
                    {{ form_widget(form.contactEmail, {'attr': {'placeholder': 'Email'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.contactPhone) }}
                    {{ form_widget(form.contactPhone, {'attr': {'placeholder': 'Téléphone'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1 Fonction">
                    {{ form_label(form.contactJob) }}
                    {{ form_widget(form.contactJob, {'attr': {'placeholder': 'Fonction', 'style': 'width:97%'}}) }}
                </div>
            </div>
        </div>

        <!-- Responsable de Traitement -->
        <div class="sectt">
            <h3>Responsable de Traitement</h3>
            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.accountantLastName) }}
                    {{ form_widget(form.accountantLastName, {'attr': {'placeholder': 'Nom'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.accountantFirstName) }}
                    {{ form_widget(form.accountantFirstName, {'attr': {'placeholder': 'Prénom'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1">
                    {{ form_label(form.accountantEmail) }}
                    {{ form_widget(form.accountantEmail, {'attr': {'placeholder': 'Email'}}) }}
                </div>
                <div class="form-group1">
                    {{ form_label(form.accountantPhone) }}
                    {{ form_widget(form.accountantPhone, {'attr': {'placeholder': 'Téléphone'}}) }}
                </div>
            </div>

            <div class="form-group">
                <div class="form-group1 Fonction">
                    {{ form_label(form.accountantJob) }}
                    {{ form_widget(form.accountantJob, {'attr': {'placeholder': 'Fonction', 'style': 'width:97%'}}) }}
                </div>
            </div>
        </div>


          <div class="sectt">
            <h3>Consultant</h3>
            <div class="form-group">
                <div class="form-group1" style="width:100%">

              
                    {{ form_widget(form.manager, {'attr': {'placeholder': 'Téléphone'}}) }}
                </div>

               
            </div>
             <div class="form-group">

                   <div class="checkbox-group">
                        {{ form_widget(form.managerDpo, {'attr': {'class': 'custom-control-input'}}) }}
                        {{ form_label(form.managerDpo, null, {'label_attr': {'class': 'custom-control-label'}}) }}
                    </div>
             </div>

               {% if is_granted('ROLE_DPO') %}
                        <div class="form-group">
                            <div class="form-group1 col-md-12" style="width:100%">
                                {{ form_label(form.lawyer) }}
                                {{ form_widget(form.lawyer, {'attr': {'class': 'form-control ' ~ ((form_errors(form.lawyer) == '') ? '' : 'is-invalid')} }) }}
                                <div class="invalid-feedback">{{ form_errors(form.lawyer) | striptags  }}</div>
                            </div>
                        </div>
                    {% endif %}
        </div>



         <div class="sectt">
            <h3>Compte client</h3>
            <div class="form-group">
                <div class="form-group1" style="width:100%">
 {{ form_label(form.parentUser) }}
                            {{ form_widget(form.parentUser, {'attr': {'class': 'form-control ' ~ ((form_errors(form.parentUser) == '') ? '' : 'is-invalid')} }) }}
                            <div class="invalid-feedback">{{ form_errors(form.parentUser) | striptags  }}</div>
                </div>

               
            </div>
             <div class="form-group">

                   <div class="form-group1" style="width:100%">
    <label for="childrenUsers-search">{{ form_label(form.childrenUsers) }}</label>

    <div class="dropdownform">
        <input 
            type="text" 
            id="childrenUsers-search" 
            class="form-control" 
            style="width:97%"
            placeholder="{{ 'Rechercher un utilisateur'|trans }}" 
            onfocus="showChildrenUsersDropdown()" 
            readonly
            required /> <!-- Keep required for validation -->

        <ul class="dropdown-menu" id="childrenUsers-dropdown">
            {% for user in form.childrenUsers.vars.choices %}
                <li data-id="{{ user.value }}" onclick="selectChildrenUser('{{ user.value }}', '{{ user.label|e('js') }}')">
                    <a href="javascript:void(0);">
                        {{ user.label }}
                    </a>
                </li>
            {% endfor %}
        </ul>
    </div>

    <!-- Hidden Input to store selected user IDs -->
    <input type="hidden" id="selected-childrenUsers" name="selected-childrenUsers" value="" required />
    {{ form_widget(form.childrenUsers, {'attr': {'id': 'form_childrenUsers', 'class': 'd-none'}}) }}

    <!-- Display Selected Users -->
    <div id="selected-childrenUsers-list" class="selected-items"></div>

    <!-- Validation Feedback -->
    <div class="invalid-feedback">{{ form_errors(form.childrenUsers) | striptags }}</div>
</div>

             </div>

          
                        <div class="form-group">
                            <div class="checkbox-group col-md-12" style="width:100%">
                              {{ form_widget(form.demo, {'attr': {'class': 'custom-control-input'}}) }}
                        {{ form_label(form.demo, null, {'label_attr': {'class': 'custom-control-label'}}) }}
                            </div>
                        </div>

                        <div class="form-group">

                   <div class="form-group1" style="width:100%">
                         {{ form_label(form.language) }}
                            {{ form_widget(form.language, {'attr': {'class': 'form-control ' ~ ((form_errors(form.language) == '') ? '' : 'is-invalid')} }) }}
                            <div class="invalid-feedback">{{ form_errors(form.language) | striptags  }}</div>
                    </div>
             </div>
               
        </div>

        <!-- Submit Button -->
        <button type="submit" id="appbundle_user_save" class="submit-button">Enregistrer</button>

        {{ form_end(form) }}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function readFile(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        var avatarImg = document.querySelector('.avatar-container img');
                        if (avatarImg) {
                            avatarImg.src = e.target.result;
                        } else {
                            let avatarContainer = document.querySelector('.avatar-container');
                            avatarContainer.innerHTML = '<img src="'+e.target.result+'" class="avatar-img rounded-circle">';
                        }
                    };

                    reader.readAsDataURL(input.files[0]);
                }
            }

            document.querySelector('.avatar-file-picker').addEventListener('change', function () {
                readFile(this);
            });
        });

      document.addEventListener("DOMContentLoaded", () => {
    const childrenUsersSearchInput = document.getElementById("childrenUsers-search");
    const childrenUsersDropdownMenu = document.getElementById("childrenUsers-dropdown");
    const selectedChildrenUsersHiddenInput = document.getElementById("form_childrenUsers"); // Link to Symfony field
    const selectedChildrenUsersList = document.getElementById("selected-childrenUsers-list");
    const selectedChildrenUsersSet = new Set();

    // ✅ Fix: Function to show the dropdown when clicking the input
    window.showChildrenUsersDropdown = () => {
        if (childrenUsersDropdownMenu) {
            childrenUsersDropdownMenu.style.display = "block";
        }
    };

    window.selectChildrenUser = (id, name) => {
        if (!selectedChildrenUsersSet.has(id)) {
            selectedChildrenUsersSet.add(id);

            // ✅ Fix: Ensure the hidden input exists before setting its value
            if (selectedChildrenUsersHiddenInput) {
                selectedChildrenUsersHiddenInput.value = Array.from(selectedChildrenUsersSet).join(',');
            }

            // Create selected user element
            const selectedItem = document.createElement('div');
            selectedItem.classList.add('selected-item');
            selectedItem.dataset.id = id;

            const nameSpan = document.createElement('span');
            nameSpan.textContent = name;

            const removeButton = document.createElement('span');
            removeButton.textContent = '×'; 
            removeButton.classList.add('remove-button');
            removeButton.onclick = () => {
                selectedChildrenUsersSet.delete(id);

                // ✅ Fix: Ensure hidden input exists before updating it
                if (selectedChildrenUsersHiddenInput) {
                    selectedChildrenUsersHiddenInput.value = Array.from(selectedChildrenUsersSet).join(',');
                }
                
                selectedItem.remove();
            };

            selectedItem.appendChild(nameSpan);
            selectedItem.appendChild(removeButton);
            selectedChildrenUsersList.appendChild(selectedItem);
        }
    };

    // ✅ Fix: Close dropdown when clicking outside
    document.addEventListener("click", (event) => {
        if (!childrenUsersSearchInput.contains(event.target) && !childrenUsersDropdownMenu.contains(event.target)) {
            childrenUsersDropdownMenu.style.display = "none";
        }
    });

    // ✅ Fix: Ensure dropdown does not disappear immediately on blur
    childrenUsersSearchInput.addEventListener("blur", () => {
        setTimeout(() => {
            if (childrenUsersDropdownMenu) {
                childrenUsersDropdownMenu.style.display = "none";
            }
        }, 200);
    });
});


    </script>
{% endblock %}
