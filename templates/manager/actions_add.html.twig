{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} - {{ 'crer_une_action'|trans }}
{% endblock %}

{% block content %}
<div class="page">
  <div class="table-container-traitements">
    <div class="header headretour">
        <a href="javascript:history.back()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
                <path fill="currentColor" d="M609.408 149.376L277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0a30.59 30.59 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.59 30.59 0 0 0 0-42.688a29.12 29.12 0 0 0-41.728 0"/>
            </svg>
        </a>
        <h2>{{ 'crer_une_action'|trans }}</h2>
    </div>

    {{ form_start(form, {"attr": {"class": "sous-traitantform", "enctype": "multipart/form-data"}}) }}

    <!-- Action Name and Budget -->
    <div class="form-group">
      <div class="form-group1">
        {{ form_label(form.name) }}
        {{ form_widget(form.name, {'attr': {'class': 'form-control', 'placeholder': 'Nom de l\'action'}}) }}
        <div class="invalid-feedback">{{ form_errors(form.name) | striptags }}</div>
      </div>

      <div class="form-group1">
        {{ form_label(form.budget) }}
        {{ form_widget(form.budget, {'attr': {'class': 'form-control', 'placeholder': 'Budget'}}) }}
        <div class="invalid-feedback">{{ form_errors(form.budget) | striptags }}</div>
      </div>
    </div>

    <!-- Action Information -->
    <div class="sectt">
      <h3>{{ 'informations'|trans }}</h3>
      <div class="form-group">
        <div class="form-group1" style="width:100%">
          {{ form_label(form.goal) }}
          {{ form_widget(form.goal, {'attr': {'class': 'form-control', 'placeholder': 'Objectif'}}) }}
          <div class="invalid-feedback">{{ form_errors(form.goal) | striptags }}</div>
        </div>
      </div>

      <div class="form-group">
        <div class="form-group1" style="width:99%;">
          {{ form_label(form.information) }}
          {{ form_widget(form.information, {'attr': {'class': 'form-control', 'placeholder': 'Informations','style' : 'height:100px'}}) }}
          <div class="invalid-feedback">{{ form_errors(form.information) | striptags }}</div>
        </div>
      </div>

      <div class="form-group">
        <div class="form-group1" style="width:100%">
          {{ form_label(form.usefulLink) }}
          {{ form_widget(form.usefulLink, {'attr': {'class': 'form-control', 'placeholder': 'Lien utile'}}) }}
          <div class="invalid-feedback">{{ form_errors(form.usefulLink) | striptags }}</div>
        </div>
      </div>
    </div>
{% do form.sheets.setRendered() %}
    <!-- Attach Practical Sheets Section -->
    <div class="form-group1" style="width:98%">
        <label for="sheets-search">{{ form_label(form.sheets) }}</label>
        <div class="dropdownform">
            <input type="text" id="sheets-search" class="form-control" placeholder="{{ 'Rechercher des fiches pratiques'|trans }}" oninput="filterSheetsDropdown()">
            <ul class="dropdown-menu" id="sheets-dropdown">
                {% for sheet in form.sheets.vars.choices %}
                    <li data-id="{{ sheet.value }}" onclick="selectSheet('{{ sheet.value }}', '{{ sheet.label }}')">
                        <a href="javascript:void(0);" >
                            {{ sheet.label }}
                        </a>
                    </li>
                {% endfor %}
            </ul>
            <input type="hidden" id="selected-sheets" name="selectedSheets" value="" />
        </div>
        
   <br>
        <button type="button" class="file-button" id="add_document_button">
            <i class="fa fa-file" aria-hidden="true"></i> {{ 'Ajouter un fichier'|trans }}
        </button>
        <div id="block_documents" class="form-group mt-3"></div>
    </div>
<br>
<br>
<br>
    <!-- Submit Button -->
    <button type="submit" class="submit-button">{{ 'Enregistrer'|trans }}</button>

    {{ form_end(form) }}
  </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.getElementById("add_document_button").addEventListener("click", function () {
            const div = document.createElement("div");
            div.className = "form-group block_document";

            const nameInput = document.createElement("input");
            nameInput.className = "form-control";
            nameInput.type = "text";
            nameInput.placeholder = "{{ 'Titre'|trans }}";
            nameInput.name = "appbundle_action_documents_names[]";

            const fileInput = document.createElement("input");
            fileInput.className = "form-control";
            fileInput.type = "file";
            fileInput.name = "appbundle_action_documents[]";

            const removeButton = document.createElement("button");
            removeButton.className = "btn btn-danger remove_document_button";
            removeButton.type = "button";
            removeButton.innerHTML = ``;
            removeButton.addEventListener("click", function () {
                div.remove();
            });

            div.appendChild(nameInput);
            div.appendChild(fileInput);
            div.appendChild(removeButton);

            document.getElementById("block_documents").appendChild(div);
        });

        document.addEventListener("DOMContentLoaded", () => {
            const sheetsSearchInput = document.getElementById("sheets-search");
            const sheetsDropdownMenu = document.getElementById("sheets-dropdown");
            const sheetsHiddenInput = document.getElementById("selected-sheets");
            const selectedSheetsSet = new Set();

            window.filterSheetsDropdown = () => {
                const filter = sheetsSearchInput.value.toLowerCase();
                const items = sheetsDropdownMenu.querySelectorAll("li");
                items.forEach(item => {
                    const text = item.textContent.toLowerCase();
                    item.style.display = text.includes(filter) ? "block" : "none";
                });
            };

            window.selectSheet = (id, name) => {
                if (!selectedSheetsSet.has(id)) {
                    selectedSheetsSet.add(id);
                    sheetsHiddenInput.value = Array.from(selectedSheetsSet).join(',');

                    const selectedItem = document.createElement('div');
                    selectedItem.classList.add('selected-item', 'd-flex', 'align-items-center', 'mb-2');
                    selectedItem.dataset.id = id;

                    const nameSpan = document.createElement('span');
                    nameSpan.textContent = name;

                    const removeButton = document.createElement('span');
                 
                    removeButton.classList.add('btn', 'remove-button', 'ml-2');
                    removeButton.innerHTML = 'x';
                    removeButton.onclick = () => {
                        selectedSheetsSet.delete(id);
                        sheetsHiddenInput.value = Array.from(selectedSheetsSet).join(',');
                        selectedItem.remove();
                    };

                    selectedItem.appendChild(nameSpan);
                    selectedItem.appendChild(removeButton);
                    sheetsSearchInput.parentNode.appendChild(selectedItem);
                }
            };
            
           // Show dropdown when input is focused
    sheetsSearchInput.addEventListener("focus", () => {
        sheetsDropdownMenu.style.display = "block";
    });

    // Hide dropdown when input loses focus
    sheetsSearchInput.addEventListener("blur", () => {
        setTimeout(() => {
            sheetsDropdownMenu.style.display = "none";
        }, 200); // Allow time for a click to register
    });
});
    </script>
{% endblock %}
