{% extends 'base.html.twig' %}

{% block title %}
	{{ parent() }}
	-
	{{ 'Plan dactions'|trans }}
{% endblock %}

{% block content %}
	<div class="page">
		<div
			class="flex">
			<!-- Plan d'actions Overview -->
			<div class="four">
				<div class="gap">
					<h4>{{ 'plan_dactions'|trans }}</h4>
					<p>{{ 'lensemble_de_vos_actions'|trans }}</p>
					<div  class="vos-actions">
						<a href="{{ path('user_actions_export') }}" class="actions-export" target="_blanc">
							<div class="imprimer" class="actions-imprimer" >
								<i class="fa fa-print" aria-hidden="true"></i>
								<p>{{ 'imprimer_mon_plan_dactions'|trans }}</p>
							</div>
						</a>

					</div>
				</div>
			</div>

			<!-- Actions Statistics -->
			<div class="four">
				<div class="gap">
					<h4 class="font-16" >{{ "Nombre d'actions"|trans }}
						:
						{{ actionsStats.total }}</h4>
					<div class="checkbox">
						<div class="chk">
							<input type="checkbox" id="filter-non-realise" checked>
							<p>{{ 'non_ralises'|trans }}
								({{ actionsStats.invalid }})</p>
						</div>
						<div class="progress-bar">
							<div class="progress" style="width: {% if actionsStats.total > 0 %}{{ (actionsStats.invalid / actionsStats.total) * 100 }}{% else %}0{% endif %}%"></div>
						</div>
					</div>
					<div class="checkbox">
						<div class="chk">
							<input type="checkbox" id="filter-realise" checked>
							<p>{{ 'ralises'|trans }}
								({{ actionsStats.valid }})</p>
						</div>
						<div class="progress-bar-two">
							<div class="progress-two" style="width: {% if actionsStats.total > 0 %}{{ (actionsStats.valid / actionsStats.total) * 100 }}{% else %}0{% endif %}%"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Table Section -->
		<div class="table-container-traitements">
			<div
				class="search-container">
				<!-- Search Bar -->
				<div class="search-bar">
					<span class="search-icon">
						<i class="fa fa-search" aria-hidden="true"></i>
					</span>
					<input type="text" placeholder="{{ 'Rechercher'|trans }}" id="search-input">
				</div>
				<!-- Action Buttons -->
				<div class="buttons">

					<div class="exporter">
						<a href="{{ path('user_actions_add') }}">
							<p>{{ 'crer_une_action'|trans }}</p>
						</a>
					</div>

					{% if app.user.user.mainGroupAgency %}
						<div class="exporter width-200" >
							<a class="width-200" href="{{ path('user_actions_grp_add') }}" class="btn btn-primary mb-2 mx-2">Créer une action de groupe</a>
						</div>
					{% endif %}

				</div>
			</div>

			<!-- Actions Table -->
			<table class="styled-table">
				<thead>
					<tr>
						<th>{{ 'action'|trans }}</th>
						<th>{{ 'a_raliser_par'|trans }}</th>
						<th>{{ 'responsable'|trans }}</th>
						<th>{{ 'date_de_cration'|trans }}</th>
						<th>{{ 'date_de_mise_en_place_souhaite'|trans }}</th>
						<th>{{ 'priorite'|trans }}</th>
						<th>{{ 'realise'|trans }}</th>
						<th class="actionss">{{ 'actions'|trans }}</th>
					</tr>
				</thead>
				<tbody id="table-body">
					{% for action in actions %}
						<tr data-realise="{{ action.terminated ? 'true' : 'false' }}" data-priority="{{ action.priority }}" data-date="{{ action.date ? action.date|date('Y-m-d') : '' }}" data-setup="{{ action.setUpDate ? action.setUpDate|date('Y-m-d') : '' }}">
							<td>
								<a href="{{ path('user_actions_edit', {'id': action.id}) }}">{{ action.name }}</a>
								{% if action.byGroup %}
									<span class="badge badge-danger">Groupe</span>
								{% endif %}
							</td>
							<td>
								{% if action.forDpo %}
									{{ 'mydigitplace'|trans }}
								{% else %}
									{{ 'client'|trans }}
								{% endif %}
							</td>
							<td>{{ action.accountantLastName }}
								{{ action.accountantFirstName }}</td>
							<td>{{ action.date ? action.date|date('d/m/Y') : '' }}</td>
							<td class="datecolor">
								{{ action.setUpDate ? action.setUpDate|date('d/m/Y') : '' }}
							</td>

							<td>
								{% if action.priority == 1 %}
									<span class="badge badge-danger action-danger" >{{ 'urgente'|trans }}</span>
								{% elseif action.priority == 2 %}
									<span class="badge badge-warning action-warning" >{{ 'moderee'|trans }}</span>
								{% else %}
									<span class="badge badge-success action-success" >{{ 'faible'|trans }}</span>
								{% endif %}
							</td>
							<td>
								<div class="switch">
									<input type="checkbox" id="action_r_input_{{ action.id }}" {% if action.terminated %} checked="checked" {% endif %} onchange="toggleRSwitch(this, {{ action.id }});">
									<label for="action_r_input_{{ action.id }}"></label>
								</div>
							</td>
							<td>
								<div class="options">
									<a href="{{ path('user_actions_copy', {'id': action.id}) }}" class="edit">
										<i class="fa fa-clone" aria-hidden="true"></i>
									</a>
									<a href="{{ path('user_actions_print', {'id': action.id}) }}" target="_blank" class="edit">
										<i class="fa fa-print" aria-hidden="true"></i>
									</a>
									<a href="{{ path('user_actions_delete', {'id': action.id}) }}" class="delete" onclick="return confirm('{{ 'confirmer_la_suppression'|trans }}');">
										<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewbox="0 0 24 24"><path fill="currentColor" d="M7 4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2h4a1 1 0 1 1 0 2h-1.069l-.867 12.142A2 2 0 0 1 17.069 22H6.93a2 2 0 0 1-1.995-1.858L4.07 8H3a1 1 0 0 1 0-2h4zm2 2h6V4H9zM6.074 8l.857 12H17.07l.857-12zM10 10a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0v-6a1 1 0 0 1 1-1m4 0a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0v-6a1 1 0 0 1 1-1"/></svg>
									</a>
								</div>
							</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>

			<!-- Pagination -->
			<div class="pagination-container">
				<div class="results-per-page">
					<label for="resultsSelect">{{ 'Afficher'|trans }}</label>
					<select id="resultsSelect" class="results-select">
						<option value="5">5</option>
						<option value="10" selected>10</option>
						<option value="20">20</option>
					</select>
					<span>{{ 'résultats par page'|trans }}</span>
				</div>
				<div class="pagination-controls">
					<button id="prevPage" class="pagination-button" disabled>&lt;</button>
					<span id="paginationInfo">{{ 'page'|trans }}
						1
						{{ 'sur'|trans }}
						1</span>
					<button id="nextPage" class="pagination-button" disabled>&gt;</button>
				</div>
			</div>

			{% if groupActions|length %}
				<br>
				<br>
				<h4>Actions du groupe</h4>
				<br>
				<div class="table-responsive p-t-10">
					<table class="styled-table width-100" >
						<thead>
							<tr>
								<th>{{ 'action'|trans }}</th>
								<th>{{ 'date_de_cration'|trans }}</th>
								<th>{{ 'date_de_mise_en_place_souhaite'|trans }}</th>
								<th>{{ 'priorite'|trans }}</th>
								<th>{{ 'realise'|trans }}</th>
								<th></th>
							</tr>
						</thead>
						<tbody>
							{% for action in groupActions %}
								{% set data = get_user_action_group_array(action) %}
								<tr>
									<td>
										<a href="{{ path('user_actions_edit', {'id': action.id}) }}">{{ action.name }}</a>
									</td>
									<td>{{ action.date|date('d/m/Y') }}</td>
									<td>{{ action.setUpDate|date('d/m/Y') }}</td>
									<td>
										{% if action.priority == 1 %}
											<span class="badge badge-danger">{{ 'urgente'|trans }}</span>
										{% elseif action.priority == 2 %}
											<span class="badge badge-warning">{{ 'moderee'|trans }}</span>
										{% else %}
											<span class="badge badge-success">{{ 'faible'|trans }}</span>
										{% endif %}
									</td>
									<td>
										{% set dataRateClass = "badge-danger" %}
										{% if data.rate == 1 %}
											{% set dataRateClass = "badge-success" %}
										{% elseif data.rate >= 0.5 %}
											{% set dataRateClass = "badge-warning" %}
										{% endif %}
										<span class="badge {{ dataRateClass }}">
											{{ data.rate * 100|round(2) }}%
										</span>
									</td>
									<td>
										<div class="option">
											<a class="imprimer" href="{{ path('user_actions_grp_list', {'id': action.id}) }}" class="btn btn-outline-secondary mt-2">Détail des entités</a>
										</div>
									</td>
								</tr>
							{% endfor %}
						</tbody>
					</table>
				</div>
			{% endif %}

		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	 <script>
	        document.addEventListener('DOMContentLoaded', function () {
	            const rows = Array.from(document.querySelectorAll('#table-body tr'));
	            const resultsSelect = document.getElementById('resultsSelect');
	            const paginationInfo = document.getElementById('paginationInfo');
	            const prevPage = document.getElementById('prevPage');
	            const nextPage = document.getElementById('nextPage');
	            const searchInput = document.getElementById('search-input');
	            const nonRealiseFilter = document.getElementById('filter-non-realise');
	            const realiseFilter = document.getElementById('filter-realise');
	
	            let currentPage = 1;
	            let resultsPerPage = parseInt(resultsSelect.value);
	            let filteredRows = [...rows];
	
	            function updateTable() {
	                const totalPages = Math.ceil(filteredRows.length / resultsPerPage);
	                const start = (currentPage - 1) * resultsPerPage;
	                const end = start + resultsPerPage;
	
	                rows.forEach(row => row.style.display = 'none');
	                filteredRows.slice(start, end).forEach(row => row.style.display = '');
	
	                paginationInfo.textContent = `Page ${currentPage} sur ${totalPages}`;
	                prevPage.disabled = currentPage === 1;
	                nextPage.disabled = currentPage === totalPages;
	            }
	
	            function filterRows() {
	                filteredRows = rows.filter(row => {
	                    const isRealise = row.dataset.realise === 'true';
	                    const matchesRealise = realiseFilter.checked ? isRealise : false;
	                    const matchesNonRealise = nonRealiseFilter.checked ? !isRealise : false;
	                    const matchesSearch = row.innerText.toLowerCase().includes(searchInput.value.toLowerCase());
	                    return (matchesRealise || matchesNonRealise) && matchesSearch;
	                });
	
	                currentPage = 1;
	                updateTable();
	            }
	
	            resultsSelect.addEventListener('change', () => {
	                resultsPerPage = parseInt(resultsSelect.value);
	                currentPage = 1;
	                updateTable();
	            });
	
	            prevPage.addEventListener('click', () => {
	                if (currentPage > 1) {
	                    currentPage--;
	                    updateTable();
	                }
	            });
	
	            nextPage.addEventListener('click', () => {
	                const totalPages = Math.ceil(filteredRows.length / resultsPerPage);
	                if (currentPage < totalPages) {
	                    currentPage++;
	                    updateTable();
	                }
	            });
	
	            searchInput.addEventListener('input', filterRows);
	            nonRealiseFilter.addEventListener('change', filterRows);
	            realiseFilter.addEventListener('change', filterRows);
	
	            filterRows();
	        });
	
	        function toggleRSwitch(element, id) {
	            element.disabled = true;
	            const initialState = !element.checked;
	
	            $.ajax({
	                type: "POST",
	                async: true,
	                url: "{{ path('user_json_toggle_action') }}",
	                data: { id: id },
	                success: function (content) {
	                    console.log(content);
	                    if (content.success) {
	                        element.checked = content.state;
	                    } else {
	                        element.checked = initialState;
	                    }
	
	                    let label = document.getElementById("action_r_label_" + id);
	                    if (element.checked === false) {
	                        label.textContent = "Non";
	                    } else {
	                        label.textContent = "Oui";
	                    }
	
	                    element.disabled = false;
	                },
	                error: function () {
	                    element.checked = initialState;
	                    element.disabled = false;
	                }
	            });
	        }
	    </script>
{% endblock %}
